#include <iostream>
using namespace std;

int map[501][501] = {};
int N, M;
int block[19][4][2] = {          //회전을 포함한 19개의 블록 생성
	{{0,0},{0,1},{0,2},{0,3}},
	{{0,0},{1,0},{2,0},{3,0}},
	{{0,0},{0,1},{1,0},{1,1}},
	{{0,0},{0,1},{0,2},{1,1}},
	{{1,0},{0,1},{1,1},{2,1}},
	{{0,1},{1,0},{1,1},{1,2}},
	{{0,0},{1,0},{2,0},{1,1}},
	{{0,0},{1,0},{2,0},{2,1}},
	{{0,0},{0,1},{0,2},{1,0}},
	{{0,0},{0,1},{1,1},{2,1}},
	{{0,2},{1,0},{1,1},{1,2}},
	{{0,0},{1,0},{1,1},{2,1}},
	{{0,1},{0,2},{1,0},{1,1}},
	{{0,1},{1,1},{2,0},{2,1}},
	{{0,0},{1,0},{1,1},{1,2}},
	{{0,0},{0,1},{1,0},{2,0}},
	{{0,0},{0,1},{0,2},{1,2}},
	{{0,1},{1,0},{1,1},{2,0}},
	{{0,0},{0,1},{1,1},{1,2}}
};


int main() {

	cin >> N >> M;

	for (int i = 0; i < N; i++) {
		for (int j = 0; j < M; j++) {
			cin >> map[i][j];
		}
	}
	int Max = -9999999999;
	for (int i = 0; i < 19; i++) {
		for (int y = 0; y < N; y++) {
			for (int x = 0; x < M; x++) {
				int sum = 0;
				for (int k = 0; k < 4; k++) {
					int n_y = block[i][k][0] + y;
					int n_x = block[i][k][1] + x;

					if (n_y < 0 || n_y >= N || n_x < 0 || n_x >= M) break;
					sum += map[n_y][n_x];
				}
				if (Max < sum)
					Max = sum;
			}
		}
	}
	cout << Max << endl;

	return 0;
}